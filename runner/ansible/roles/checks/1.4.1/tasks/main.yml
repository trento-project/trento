---

- name: "{{ id }}.check"
  shell: |
    # if no Azure Fence Agent exit, with a pass
    cibadmin -Q --xpath "//primitive[@type='fence_azure_arm']/@type" > /dev/null 2>&1 || exit 0
    # Check that following match expected, exit with error if any do not
    XPATH="//primitive[@type='fence_azure_arm']/instance_attributes/nvpair"
    [[ $(cibadmin -Q --xpath "${XPATH} [@name='pcmk_monitor_retries']" | grep -oP 'value="\K[^"]+') != "{{ expected[id + '.pcmk_monitor_retries'] }}" ]] && exit 1
    [[ $(cibadmin -Q --xpath "${XPATH} [@name='pcmk_action_limit']" | grep -oP 'value="\K[^"]+') != "{{ expected[id + '.pcmk_action_limit'] }}" ]] && exit 1
    [[ $(cibadmin -Q --xpath "${XPATH} [@name='power_timeout']" | grep -oP 'value="\K[^"]+') != "{{ expected[id + '.power_timeout'] }}" ]] && exit 1
    [[ $(cibadmin -Q --xpath "${XPATH} [@name='pcmk_reboot_timeout']" | grep -oP 'value="\K[^"]+') != "{{ expected[id + '.pcmk_reboot_timeout'] }}" ]] && exit 1
    XPATH="//primitive[@type='fence_azure_arm']/operations/op"
    [[ $(cibadmin -Q --xpath "${XPATH} [@name='monitor']" | grep -oP 'interval="\K[^"]+') != "{{ expected[id + '.monitor_interval'] }}" ]] && exit 1
    [[ $(cibadmin -Q --xpath "${XPATH} [@name='monitor']" | grep -oP 'timeout="\K[^"]+') != "{{ expected[id + '.monitor_timeout'] }}" ]] && exit 1
    exit 0
  check_mode: false
  register: config_updated
  changed_when: config_updated.rc != 0
  failed_when: config_updated.rc > 1

- block:
    - name: Post results
      import_role:
        name: post-results
  when:
    - ansible_check_mode
  vars:
    status: "{{ config_updated is not changed }}"
